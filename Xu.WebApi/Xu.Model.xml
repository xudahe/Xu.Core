<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xu.Model</name>
    </assembly>
    <members>
        <member name="T:Xu.Model.ModelBase">
            <summary>
            领域对象泛型基类，领域对象类名不能超过50个字符
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.Id">
            <summary>
            Id，领域对象标识
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.DeleteTime">
            <summary>
            删除时间（不为空代表该条数据已删除），逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="T:Xu.Model.Enum.JobStatus">
            <summary>
            Job运行状态
            </summary>
        </member>
        <member name="T:Xu.Model.Models.Dept">
            <summary>
            部门管理
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.DeptCode">
            <summary>
            部门编码
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.DeptManager">
            <summary>
            部门负责人
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.ParentDept">
            <summary>
            上级部门
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.Enabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Dept.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Xu.Model.Models.Menu">
            <summary>
            菜单配置表（目前菜单共三级）
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.SystemName">
            <summary>
            系统名称(大屏/应用)
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.ClassName">
            <summary>
            菜单类名
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.MenuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.RouterUrl">
            <summary>
            菜单路由
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.ParentId">
            <summary>
            父级菜单Id
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.LoadWay">
            <summary>
            加载方式
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.Index">
            <summary>
            加载序号
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.Enabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Menu.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Xu.Model.Models.Role">
            <summary>
            角色表
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Role.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Role.MenuIds">
            <summary>
            菜单Ids(三级菜单)
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Role.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Xu.Model.Models.Role.Enabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="T:Xu.Model.Models.TasksQz">
            <summary>
            定时任务计划列表
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.JobName">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.JobGroup">
            <summary>
            任务分组
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.AssemblyName">
            <summary>
            任务所在DLL对应的程序集名称，默认值："Xu.Tasks"
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.ClassName">
            <summary>
            任务所在类，默认值："JobQuartz"
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.Remark">
            <summary>
            任务描述
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.RunTimes">
            <summary>
            重复执行次数,默认为0
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.PerformTime">
            <summary>
            最后执行时间
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.TriggerType">
            <summary>
            触发器类型（simple 或 cron）
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.Cron">
            <summary>
            间隔（Cron）-- 任务运行时间表达式
            <a href="http://cron.qqe2.com/" target="_blank">cron在线生成</a>
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.IntervalSecond">
            <summary>
            执行间隔时间, 秒为单位
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.JobStatus">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.JobParams">
            <summary>
            执行传参
            </summary>
        </member>
        <member name="P:Xu.Model.Models.TasksQz.Enabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="T:Xu.Model.Models.User">
            <summary>
            用户信息表
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.LoginName">
            <summary>
            登录账号(用户名)
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.LoginPwd">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.DeptName">
            <summary>
            所屬部门
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.LastErrTime">
            <summary>
            最后登录时间
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.ErrorCount">
            <summary>
            错误次数
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.Birth">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.Enabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.Models.User.RoleIds">
            <summary>
            角色ids
            </summary>
        </member>
        <member name="T:Xu.Model.ResultModel.MessageModel`1">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`1.Status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`1.Success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`1.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`1.Response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`2.Status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`2.Success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`2.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.MessageModel`2.Response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="T:Xu.Model.ResultModel.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.PageModel`1.Page">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.PageModel`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.PageModel`1.DataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.PageModel`1.Data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="F:Xu.Model.ResultModel.ResponseEnum.NoPermissions">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:Xu.Model.ResultModel.ResponseEnum.NoFound">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="F:Xu.Model.ResultModel.ResponseEnum.ServerError">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="T:Xu.Model.ResultModel.TableModel`1">
            <summary>
            表格数据，支持分页
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.TableModel`1.Code">
            <summary>
            返回编码
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.TableModel`1.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.TableModel`1.Count">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:Xu.Model.ResultModel.TableModel`1.Data">
            <summary>
            返回数据集
            </summary>
        </member>
        <member name="M:Xu.Model.DBSeed.SeedAsync(Xu.Model.MyContext,System.String)">
            <summary>
            异步添加种子数据
            </summary>
            <param name="myContext"></param>
            <param name="WebRootPath"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateControllers(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成Controller层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <param name="isMuti"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateModels(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成Model层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <param name="isMuti"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateIRepositorys(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成IRepository层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="isMuti"></param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateIServices(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成 IService 层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="isMuti"></param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateRepository(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成 Repository 层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="isMuti"></param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateServices(SqlSugar.SqlSugarClient,System.String,System.Boolean,System.String[])">
            <summary>
            生成 Service 层
            </summary>
            <param name="sqlSugarClient">sqlsugar实例</param>
            <param name="ConnId">数据库链接ID</param>
            <param name="isMuti"></param>
            <param name="tableNames">数据库表名数组，默认空，生成所有表</param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_Controller_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产Controller层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
            <param name="blnSerializable">是否序列化</param>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_Model_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产Model层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
            <param name="blnSerializable">是否序列化</param>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_IRepository_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产IRepository层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_IServices_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产IServices层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_Repository_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产 Repository 层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
        </member>
        <member name="M:Xu.Model.FrameSeed.Create_Services_ClassFileByDBTalbe(SqlSugar.SqlSugarClient,System.String,System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产 Services 层
            </summary>
            <param name="sqlSugarClient"></param>
            <param name="ConnId">数据库链接ID</param>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="isMuti"></param>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateFilesByClassStringList(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            根据模板内容批量生成文件
            </summary>
            <param name="ls">类文件字符串list</param>
            <param name="strPath">生成路径</param>
            <param name="fileNameTp">文件名格式模板</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetMainConnectionDb">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.Db">
            <summary>
            数据连接对象
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.Context">
            <summary>
            数据库上下文实例（自动关闭连接）
            </summary>
        </member>
        <member name="M:Xu.Model.MyContext.#ctor">
            <summary>
            功能描述:构造函数
            </summary>
        </member>
        <member name="M:Xu.Model.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Xu.Model.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetDbContext">
            <summary>
            功能描述:获得一个DbContext
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="T:Xu.Model.ViewModels.ServerViewModel">
            <summary>
            服务器VM
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.EnvironmentName">
            <summary>
            环境变量
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.OSArchitecture">
            <summary>
            系统架构
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.ContentRootPath">
            <summary>
            ContentRootPath
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.WebRootPath">
            <summary>
            WebRootPath
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.FrameworkDescription">
            <summary>
            .NET Core版本
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.MemoryFootprint">
            <summary>
            内存占用
            </summary>
        </member>
        <member name="P:Xu.Model.ViewModels.ServerViewModel.WorkingTime">
            <summary>
            启动时间
            </summary>
        </member>
    </members>
</doc>
