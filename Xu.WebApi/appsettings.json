{
  "Logging": {
    "LogLevel": {
      "Default": "Information", //加入Default否则log4net本地写入不了日志
      "Blog.Core.AuthHelper.ApiResponseHandler": "Error"
    },
    "Debug": {
      "IncludeScopes": false,
      "LogLevel": {
        "Default": "Warning"
      }
    },
    "Console": {
      "IncludeScopes": false,
      "LogLevel": {
        "Default": "Warning",
        "Microsoft.Hosting.Lifetime": "Debug"
      }
    },
    "Log4Net": {
      "Name": "WebApi"
    }
  },
  "AllowedHosts": "*",
  "Redis": {
    "ConnectionString": "127.0.0.1:6319,password=admin"
  },
  "RabbitMQ": {
    "Enabled": false,
    "Connection": "118.25.251.13",
    "UserName": "",
    "Password": "!",
    "RetryCount": 3
  },
  "Kafka": {
    "Enabled": false,
    "Servers": "localhost:9092",
    "Topic": "blog",
    "GroupId": "blog-consumer",
    "NumPartitions": 3 //主题分区数量
  },
  "EventBus": {
    "Enabled": false,
    "SubscriptionClientName": "WebApi"
  },
  "AppSettings": {
    "RedisCachingAOP": {
      "Enabled": false
    },
    "MemoryCachingAOP": {
      "Enabled": true
    },
    "LogAOP": {
      "Enabled": true,
      "LogToFile": {
        "Enabled": true
      },
      "LogToDB": {
        "Enabled": true
      },
      "Remark": "服务层请求响应AOP日志，web目录下，Log/AOPLog.log"
    },
    "TranAOP": {
      "Enabled": true
    },
    "SqlAOP": {
      "Enabled": true,
      "LogToFile": {
        "Enabled": true
      },
      "LogToDB": {
        "Enabled": true
      },
      "LogToConsole": {
        "Enabled": false
      },
      "Remark": "数据库操作日志，web目录下，Log/SqlLog.log"
    },
    "Date": "2018-08-28",
    "SeedDBEnabled": true, //只生成表结构
    "SeedDBDataEnabled": true, //生成表,并初始化数据
    "Author": "WebApi",
    "SvcName": "", // /svc/blog
    "UseLoadTest": false //是否开启测试环境
  },

  // 请配置MainDB为你想要的主库的ConnId值,并设置对应的Enabled为true；
  // *** 单库操作，把 MutiDBEnabled 设为false ***；
  // *** 多库操作，把 MutiDBEnabled 设为true，其他的从库Enabled也为true **；
  // 具体配置看视频：https://www.bilibili.com/video/BV1BJ411B7mn?p=6，https://mp.weixin.qq.com/s/nGyQM3vsJL50zX7j-3iMVA

  "MainDB": "WMBLOG_MYSQL_1", //当前项目的主库，所对应的连接字符串的Enabled必须为true
  "MutiDBEnabled": true, //是否开启多库模式
  "CQRSEnabled": false, //是否开启读写分离模式,必须是单库模式，且数据库类型一致，比如都是SqlServer.   读只能读取从库，写只能写在主库
  "DBS": [
    /*
      对应下边的 DBType
      MySql = 0,
      SqlServer = 1,
      Sqlite = 2,
      Oracle = 3,
      PostgreSQL = 4
    */
    {
      "ConnId": "WMBLOG_MYSQL_1",
      "DBType": 0,
      "Enabled": true, //主库
      "HitRate": 50, //值越大，优先级越高
      "Connection": "Server=localhost; Port=3306;Stmt=; Database=WMXUDB; Uid=root; Pwd=123456;"
    },
    {
      "ConnId": "WMBLOG_MYSQL_2",
      "DBType": 4,
      "Enabled": true, //从库
      "HitRate": 40, //值越大，优先级越高
      "Connection": "Server=localhost; Port=3306;Stmt=; Database=WMXUDB1; Uid=root; Pwd=123456;"
    },
    {
      "ConnId": "WMBLOG_SQLSERVER",
      "DBType": 1,
      "Enabled": false, // 不开启
      "HitRate": 40,
      "Connection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=WMBLOG_MSSQL_1;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"
    },
    {
      "ConnId": "WMBLOG_SQLITE",
      "DBType": 2,
      "Enabled": false, // 不开启
      "HitRate": 30,
      "Connection": "WMXUDB.db" //sqlite只写数据库名就行
    },
    {
      "ConnId": "WMBLOG_ORACLE",
      "DBType": 3,
      "Enabled": false, // 不开启
      "HitRate": 20,
      "Connection": "Data Source=127.0.0.1/ops;User ID=OPS;Password=123456;Persist Security Info=True;Connection Timeout=60;"
    }
  ],
  "Audience": {
    "Expiration": 60, //accessToken默认超时时间(单位：分钟)
    "Secret": "sdfsdfsrty45634kkhllghtdgdfss345t678fs", //不要太短，16位+
    "SecretFile": "C:\\my-file\\WebApi.core.audience.secret.txt", //安全。内容就是Secret
    "Issuer": "WebApi",
    "Audience": "wr"
  },
  "Startup": {
    "Cors": {
      "PolicyName": "CorsIpAccess", //策略名称
      "EnableAllIPs": true, //当为true时，开放所有IP均可访问。
      // 支持多个域名端口，注意端口号后不要带/斜杆：比如localhost:8000/，是错的
      // 注意，http://127.0.0.1:1818 和 http://localhost:1818 是不一样的
      "IPs": "http://127.0.0.1:8080,http://localhost:8080,http://localhost:8081,http://localhost:8082,http://localhost:8083,http://localhost:8084"
    },
    "AppConfigAlert": {
      "Enabled": true
    },
    "ApiName": "WebApi",
    "IdentityServer4": {
      "Enabled": false, // 这里默认是false，表示使用jwt，如果设置为true，则表示系统使用Ids4模式
      "AuthorizationUrl": "http://localhost:5004", // 认证中心域名
      "ApiName": "blog.core.api" // 资源服务器
    },
    "Authing": {
      "Enabled": false,
      "Issuer": "https://uldr24esx31h-demo.authing.cn/oidc",
      "Audience": "63d51c4205c2849803be5178",
      "JwksUri": "https://uldr24esx31h-demo.authing.cn/oidc/.well-known/jwks.json"
    },
    "RedisMq": {
      "Enabled": false //redis消息队列
    },
    "MiniProfiler": {
      "Enabled": true //性能分析开启
    },
    "Nacos": {
      "Enabled": false //Nacos注册中心
    }
  },
  "Middleware": {
    "RequestResponseLog": {
      "Enabled": true,
      "LogToFile": {
        "Enabled": true
      },
      "LogToDB": {
        "Enabled": true
      },
      "Remark": "全部请求与响应日志，web目录下，Log/RequestResponseLog.log"
    },
    "IPLog": {
      "Enabled": true,
      "LogToFile": {
        "Enabled": true
      },
      "LogToDB": {
        "Enabled": true
      },
      "Remark": "IP 请求日志，web目录下，Log/RequestIpInfoLog.log"
    },
    "RecordAccessLogs": {
      "Enabled": true,
      "LogToFile": {
        "Enabled": true
      },
      "LogToDB": {
        "Enabled": true
      },
      //详细的用户访问请求接口日志 可以忽略某些接口
      "IgnoreApis": "/api/permission/getnavigationbar,/api/monitor/getids4users,/api/monitor/getaccesslogs,/api/monitor/server,/api/monitor/getactiveusers,/api/monitor/server,",
      "Remark": "记录访问日志，web目录下，Log/RecordAccessLogs.log"
    },
    "SignalR": {
      "Enabled": true
    },
    "SignalRSendLog": {
      "Enabled": true,
      "Remark": "SignalR日志，web目录下，Log/ReceiveUpdate.log"
    },
    "QuartzNetJob": {
      "Enabled": true,
      "Remake": "Quartz 定时任务"
    },
    "Consul": {
      "Enabled": false,
      "Remake": "Consul 的核心功能就是服务注册和发现"
    },
    "IpRateLimit": {
      "Enabled": true,
      "Remake": "API 限流处理"
    }
  },
  "IpRateLimiting": {
    "EnableEndpointRateLimiting": true, //false：则全局将应用限制，并且仅应用具有作为端点的规则* 。 true：则限制将应用于每个端点，如{HTTP_Verb}{PATH}
    "StackBlockedRequests": false, //false：则拒绝的API调用不会添加到调用次数计数器上
    "RealIpHeader": "X-Real-IP", //注意这个配置，表示获取用户端的真实IP，我们的线上经过负载后是 X-Forwarded-For，而测试服务器没有，所以是X-Real-IP
    "ClientIdHeader": "X-ClientId", //取白名单的客户端ID。如果此标头中存在客户端ID并且与ClientWhitelist中指定的值匹配，则不应用速率限制。
    "IpWhitelist": [], //IP白名单
    "EndpointWhitelist": ["get:/api/xxx", "*:/api/yyy"], //端点白名单
    "ClientWhitelist": ["dev-client-1", "dev-client-2"], //客户端白名单
    "HttpStatusCode": 429, //返回状态码
    "GeneralRules": [ //api规则,结尾一定要带*
      {
        "Endpoint": "*:/api/*",
        "Period": "1s",
        "Limit": 5
      },
      {
        "Endpoint": "*/api/*",
        "Period": "15m",
        "Limit": 300
      },
      {
        "Endpoint": "*/api/*",
        "Period": "12h",
        "Limit": 5000
      }
    ]
  },
  "ConsulSetting": {
    "ServiceName": "WebApiService",
    "ServiceIP": "localhost",
    "ServicePort": "1081",
    "ServiceHealthCheck": "/healthcheck",
    "ConsulAddress": "http://localhost:8500"
  },
  "nacos": {
    "ServerAddresses": ["http://localhost:8848"], // nacos 连接地址
    "DefaultTimeOut": 15000, // 默认超时时间
    "Namespace": "public", // 命名空间
    "ListenInterval": 10000, // 监听的频率
    "ServiceName": "Xu.WebApi", // 服务名
    "Port": "9291", // 服务端口号
    "RegisterEnabled": true // 是否直接注册nacos
  },
  "RSACryption": {
    "Enabled": false,
    "NoEncrypt": "", //白名单
    "privateKey": "",
    "publicKey": "",
    "Remake": "参考文档：https://blog.csdn.net/qq_34780173/article/details/104016734"
  }
}