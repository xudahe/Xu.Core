<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xu.Model</name>
    </assembly>
    <members>
        <member name="T:Xu.Model.ModelBase">
            <summary>
            领域对象泛型基类，领域对象类名不能超过50个字符
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.Id">
            <summary>
            Id，领域对象标识
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Xu.Model.ModelBase.DeleteTime">
            <summary>
            删除时间（不为空代表该条数据已删除），逻辑上的删除，非物理删除
            </summary>
        </member>
        <member name="T:Xu.Model.Department">
            <summary>
            部门管理
            </summary>
        </member>
        <member name="P:Xu.Model.Department.DeptCode">
            <summary>
            部门编码
            </summary>
        </member>
        <member name="P:Xu.Model.Department.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Xu.Model.Department.DeptUser">
            <summary>
            部门负责人
            </summary>
        </member>
        <member name="P:Xu.Model.Department.ParentName">
            <summary>
            上级部门
            </summary>
        </member>
        <member name="P:Xu.Model.Department.IsDisable">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.Department.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Xu.Model.Menu">
            <summary>
            菜单配置表
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.SystemName">
            <summary>
            系统名称(大屏/应用)
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.ClassName">
            <summary>
            菜单类名
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.MenuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.ParentName">
            <summary>
            父级菜单
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.LoadWay">
            <summary>
            加载方式
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.IsDisable">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.Menu.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:Xu.Model.Role">
            <summary>
            角色表
            </summary>
        </member>
        <member name="P:Xu.Model.Role.RoleCode">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:Xu.Model.Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Xu.Model.Role.MenuIds">
            <summary>
            菜单Ids(无父级)
            </summary>
        </member>
        <member name="P:Xu.Model.Role.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Xu.Model.Role.IsDisable">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="T:Xu.Model.User">
            <summary>
            用户信息表
            </summary>
        </member>
        <member name="P:Xu.Model.User.LoginName">
            <summary>
            登录账号(用户名)
            </summary>
        </member>
        <member name="P:Xu.Model.User.LoginPwd">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:Xu.Model.User.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:Xu.Model.User.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Xu.Model.User.LastErrTime">
            <summary>
            最后登录时间 
            </summary>
        </member>
        <member name="P:Xu.Model.User.ErrorCount">
            <summary>
            错误次数 
            </summary>
        </member>
        <member name="P:Xu.Model.User.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Xu.Model.User.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Xu.Model.User.Birth">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Xu.Model.User.Addres">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Xu.Model.User.IsDisable">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:Xu.Model.User.RoleIds">
            <summary>
            角色ids
            </summary>
        </member>
        <member name="T:Xu.Model.MessageModel`1">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:Xu.Model.MessageModel`1.Success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Xu.Model.MessageModel`1.Msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Xu.Model.MessageModel`1.Response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="T:Xu.Model.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:Xu.Model.PageModel`1.Page">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:Xu.Model.PageModel`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Xu.Model.PageModel`1.DataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:Xu.Model.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Xu.Model.PageModel`1.Data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="F:Xu.Model.ResponseEnum.NoPermissions">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:Xu.Model.ResponseEnum.NoFound">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="F:Xu.Model.ResponseEnum.ServerError">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="T:Xu.Model.TableModel`1">
            <summary>
            表格数据，支持分页
            </summary>
        </member>
        <member name="P:Xu.Model.TableModel`1.Code">
            <summary>
            返回编码
            </summary>
        </member>
        <member name="P:Xu.Model.TableModel`1.Msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Xu.Model.TableModel`1.Count">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:Xu.Model.TableModel`1.Data">
            <summary>
            返回数据集
            </summary>
        </member>
        <member name="M:Xu.Model.DBSeed.Seed(Xu.Model.MyContext)">
            <summary>
            异步添加种子数据
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateModels(Xu.Model.MyContext)">
            <summary>
            生成Model层
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateIRepositorys(Xu.Model.MyContext)">
            <summary>
            生成IRepository层
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateIServices(Xu.Model.MyContext)">
            <summary>
            生成 IService 层
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateRepository(Xu.Model.MyContext)">
            <summary>
            生成 Repository 层
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.FrameSeed.CreateServices(Xu.Model.MyContext)">
            <summary>
            生成 Repository 层
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="P:Xu.Model.MyContext.ConnectionString">
            <summary>
            连接字符串 
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.DbType">
            <summary>
            数据库类型 
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.Db">
            <summary>
            数据连接对象 
            </summary>
        </member>
        <member name="P:Xu.Model.MyContext.Context">
            <summary>
            数据库上下文实例（自动关闭连接）
            </summary>
        </member>
        <member name="M:Xu.Model.MyContext.#ctor">
            <summary>
            功能描述:构造函数
            </summary>
        </member>
        <member name="M:Xu.Model.MyContext.Create_Model_ClassFileByDBTalbe(System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产Model层
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="blnSerializable">是否序列化</param>
        </member>
        <member name="M:Xu.Model.MyContext.Create_IRepository_ClassFileByDBTalbe(System.String,System.String,System.String[],System.String)">
            <summary>
            功能描述:根据数据库表生产IRepository层
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
        </member>
        <member name="M:Xu.Model.MyContext.Create_IServices_ClassFileByDBTalbe(System.String,System.String,System.String[],System.String)">
            <summary>
            功能描述:根据数据库表生产IServices层
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
        </member>
        <member name="M:Xu.Model.MyContext.Create_Repository_ClassFileByDBTalbe(System.String,System.String,System.String[],System.String)">
            <summary>
            功能描述:根据数据库表生产 Repository 层
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
        </member>
        <member name="M:Xu.Model.MyContext.Create_Services_ClassFileByDBTalbe(System.String,System.String,System.String[],System.String)">
            <summary>
            功能描述:根据数据库表生产 Services 层
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Xu.Model.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetDbContext">
            <summary>
            功能描述:获得一个DbContext
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xu.Model.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:Xu.Model.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Xu.Model.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
    </members>
</doc>
